개요
AI 학습 플랫폼의 데이터 분할 위젯 모듈은 사용자가 업로드한 원본 데이터셋을 훈련용과 검증/테스트용으로 나누어주는 기능이다. 이 모듈은 GUI 기반으로 제공되어 코딩 없이도 데이터 분할 작업을 수행할 수 있으며, 플랫폼 내 다른 모델 학습 또는 평가 모듈과 연동되어 머신러닝 워크플로우를 완성시킨다.
결과적으로 본 위젯은 모델 과적합 방지, 모델 성능 검증 등의 목적을 달성하기 위한 데이터 준비 단계를 간소화하여, 사용자 경험을 향상하고 플랫폼의 엔드투엔드(End-to-End) 기능성을 강화한다.

1) AI 플랫폼 내에서 GUI 기반으로 데이터를 훈련/테스트 세트로 쉽게 분리하는 모듈로, 데이터 준비 과정을 간소화하여 모델의 과적합 방지와 성능 검증을 지원하고 플랫폼의 엔드투엔드 기능을 강화한다.
머신러닝 모델의 성능 평가와 데이터 분할 필요성
머신러닝 모델의 성능을 객관적으로 평가하려면 훈련에 사용하지 않은 별도의 데이터로 테스트하는 과정이 필수적이다. 대부분의 프로젝트에서 데이터가 한 벌로 제공되는 경우가 많아, 이를 훈련용과 테스트용으로 적절한 비율로 분할하지 않으면 모델의 실제 성능을 확인하기 어렵다. 예컨대 하나의 데이터셋만 사용할 경우 일부 데이터를 떼어내어 모델 평가에 활용해야 하며, 일반적으로 8:2 또는 7:3 비율로 훈련-테스트 세트를 구분한다.
데이터 분할을 통해 모델이 새로운 데이터에도 잘 작동하는지 미리 시뮬레이션할 수 있고, 과적합을 피할 수 있다.

2) 모델의 객관적인 성능 평가를 위해 데이터셋을 보통 7:3이나 8:2 등으로 훈련/테스트 세트로 나누며, 이렇게 분리해두면 모델이 새로운 데이터에서도 잘 동작하는지 미리 검증하고 과적합을 예방할 수 있다.
현재 플랫폼의 문제점 (데이터 분할 기능 부재)
현재 당사 플랫폼은 GUI 환경에서 모델을 설계·훈련하는 기능을 제공하고 있으나, 사용자 데이터셋을 분할하는 도구가 부재한 상황이다. 사용자는 직접 오프라인에서 데이터를 나누어 두 개의 파일을 업로드하거나, 코드 셀을 사용해야 하는 불편이 있다. 이는 코딩에 익숙하지 않은 사용자나 AutoML 기능을 활용하려는 사용자에게 진입장벽이 된다.

3) 현재 우리 플랫폼에는 GUI로 데이터를 분할하는 도구가 없어, 사용자가 외부에서 직접 데이터를 나누어 업로드하거나 코드를 작성해야 하는 불편이 있으며, 이는 코딩에 익숙하지 않은 사용자들에게 큰 장벽으로 작용한다.
경쟁 플랫폼 사례 및 구현 필요성
경쟁 플랫폼 동향을 보면, Microsoft Azure ML Studio, Google Vertex AI 등 유사한 GUI 기반 AI 플랫폼들은 이미 편리한 데이터 분할 기능을 제공하고 있다. 예를 들어 Azure ML의 시각적 실험 디자이너에서는 Split Data라는 모듈을 제공하여 단일 데이터 입력을 지정된 비율로 나누고 두 출력 포트로 내보낼 수 있다.
또한 Google의 AutoML도 기본값으로 데이터를 무작위 80/10/10 비율로 자동 분할하여 훈련, 검증, 테스트 세트를 구성한다. 이러한 업계 사례들은 데이터 분할 기능이 머신러닝 플랫폼의 기본 요건임을 시사하며, 우리 플랫폼에서도 해당 기능의 구현이 시급하다.

4) Azure ML Studio나 Google AutoML 등 경쟁 플랫폼들은 이미 데이터 자동 분할 기능을 갖추고 있으며, 이는 데이터 분할이 ML 플랫폼의 필수 기능임을 보여준다. 우리 플랫폼도 기능적 열세를 해소하기 위해 신속히 데이터 분할 기능을 구현해야 한다.
사업 목표
데이터 분할 기능 완비로 플랫폼 완성도 제고: 본 모듈 구현을 통해 데이터 전처리부터 모델 평가까지 한 환경에서 이루어지도록 하여 플랫폼의 엔드투엔드 기능을 강화한다. 이는 사용자가 외부 도구에 의존하지 않고 모든 작업을 플랫폼 내에서 수행하도록 유도함으로써 사용자 락인(lock-in)을 높이는 효과가 있다.
사용자 경험 개선 및 시장 경쟁력 확보: 코딩 경험이 부족한 현업 전문가들도 손쉽게 데이터 분할을 수행하도록 함으로써 UX 향상 및 학습 곡선 감소를 이루는 것이 목표다. 경쟁 서비스와 대비하여 필수 기능을 제공함으로써 기능적 열세를 해소하고 시장 경쟁력을 확보한다.
모델 신뢰성과 성능 향상 지원: 올바른 데이터 분할을 통해 모델 검증을 체계화하고 결과에 대한 신뢰도를 높인다. 이는 곧 플랫폼에서 만들어진 모델들의 신뢰성 향상으로 이어지며, 성공 사례 창출 및 비즈니스 가치 증대에 기여한다.

5) 필요기능
5.1) #B7D12-F0001: 데이터 분할 기능 구현을 통해 플랫폼 내에서 모든 ML 과정을 처리할 수 있도록 완성도를 높이고, 비개발자도 쉽게 사용하여 UX와 시장 경쟁력을 강화하며, 올바른 데이터 분할로 모델 검증을 체계화하여 플랫폼에서 생성된 모델들의 신뢰성과 성능을 향상시키는 것을 목표로 한다.
유연한 분할 비율 설정 – 사용자가 데이터셋을 얼마나 훈련용과 테스트용으로 나눌지 비율(예: 80:20, 70:30 등)을 자유롭게 설정할 수 있다. 기본값은 80%를 훈련 세트로 배정하고 20%를 테스트 세트로 배정하며 사용자는 슬라이더나 입력란을 통해 다른 비율도 지정할 수 있다. 설정된 비율에 따라 첫 번째 출력 포트에는 훈련용 데이터가, 두 번째 출력 포트에는 테스트용 데이터가 전달된다 (예: 80% 데이터 → 출력1, 20% 데이터 → 출력2). 분할 비율은 0.0 ~ 1.0 사이의 실수로 지정하며, 잘못된 값 입력 시 경고를 제공한다.

5.2) #B7D12-F0002: 데이터셋을 기본 8:2 등 원하는 비율로 훈련/테스트 세트로 나눌 수 있도록 하며(디폴트 80% 훈련, 20% 테스트), UI에서 비율을 조절할 수 있다. 설정한 비율에 따라 각 출력에 훈련용/테스트용 데이터가 전달되고, 비율 입력이 올바르지 않을 경우 경고가 제공된다.
무작위 샘플링 및 시드 지정 – 데이터를 무작위로 섞어 분할하여 편향 제거와 일반화 성능 향상을 도모한다. 사용자가 이 옵션을 활성화하면 분할 전에 데이터 행의 순서를 랜덤하게 섞어주며, 특정 시드값(seed)을 입력 받아 재현 가능한 분할 결과를 얻을 수 있다. 시드를 동일하게 두고 분할을 여러 번 수행하면 항상 동일한 결과가 나오므로, 실험의 신뢰성을 높이고 추후 재분석 시 일관성을 유지한다.

5.3) #B7D12-F0003: 데이터 분할 시 셔플(무작위 섞기) 옵션과 시드 값을 지원하여, 무작위 분할로 편향을 줄이고 시드를 고정하면 반복 실행 시 동일한 결과를 얻어 실험 결과의 재현성과 일관성을 보장한다.
계층별(Stratified) 분할 옵션 – 분류 문제 등의 데이터셋의 경우 특정 열의 분포를 균등히 유지하며 분할할 수 있다. 사용자가 타겟 레이블 열 등을 strata로 지정하면, 분할 결과 두 출력 세트에 해당 열의 각 값 빈도가 원본과 유사하게 나타나도록 샘플링한다. 예를 들어 클래스 레이블 'A'와 'B'의 비율이 7:3인 데이터라면, 훈련/테스트 세트 각각에서도 유사한 비율(7:3)이 유지되도록 분할한다. 이 옵션은 데이터 불균형으로 인한 모델 성능 편차를 방지하고 보다 현실적인 평가를 가능케 한다. 단, 계층 분할은 사용자가 지정한 열에 충분한 데이터 분포가 존재할 때만 적용되며, 그렇지 않은 경우 경고 및 일반 무작위 분할로 대체된다.

5.4) #B7D12-F0004: 데이터 분할 시 지정한 기준 열의 분포를 훈련과 테스트 세트에서 원본과 유사하게 유지하는 계층별 분할을 지원하여, 클래스 불균형으로 인한 모델 성능 차이를 줄이고 보다 현실적인 모델 평가를 가능하게 한다. (※ 충분한 데이터 분포가 없으면 일반 무작위 분할로 대체됨)
순차적 분할(시간순/비무작위) – 시계열 데이터나 시간에 따라 발생하는 데이터의 경우, 최신 데이터를 테스트 세트로 분리하여 과거로 학습하고 미래를 예측하는 평가를 할 필요가 있다. 이를 지원하기 위해 비무작위(non-random) 분할 모드를 제공한다. 사용자가 이 모드를 선택하면 데이터셋의 순서를 유지한 채 앞쪽부터 일정 비율을 훈련 세트로, 나머지 뒤쪽 데이터를 테스트 세트로 할당한다. 예를 들어 날짜 순으로 정렬된 데이터라면 마지막 20%를 테스트용으로 떼어내는 식이다. 이러한 비무작위 분할은 최근 데이터에 대한 모델 성능 검증에 유용하며 금융 시계열 예측 등 시간 의존성이 강한 도메인에서 활용된다.

5.5) #B7D12-F0005: 시계열 등 시간 순서가 중요한 데이터에 대해서는 섞지 않고 순서대로 앞부분을 훈련 세트, 마지막 일정 비율(예: 마지막 20%)을 테스트 세트로 나누는 비무작위 분할을 지원하여, 과거 데이터로 학습하고 최신 데이터로 평가하는 시나리오의 모델 성능 검증에 활용할 수 있다.
조건 기반 분할(고급) – 사용자가 특정 필터 조건에 따라 데이터셋을 둘로 나누는 고급 기능이다. 예를 들어, 데이터에 지역 필드가 있을 경우 "region == 'Seoul'"과 같은 조건으로 서울 지역 데이터와 기타 지역 데이터를 분리할 수 있다. GUI 상에서 **규칙 식(Editor)**을 제공하여 사용자가 SQL where 절이나 Python식 비교 구문 등을 입력하면, 해당 조건을 만족하는 행은 첫 번째 출력으로, 나머지는 두 번째 출력으로 자동 분류된다. 정규표현식 분할이나 수치 범위 조건 분할 등 다양한 조건식도 지원하여, 단순 무작위 분할을 넘어 데이터 필터링을 통한 활용도 높은 분할을 가능케 한다.
이 기능은 초기 버전에서는 베타로 제공되며, 올바른 식 입력을 위해 문법 검증 기능도 함께 제공된다.

5.6) #B7D12-F0006: 사용자가 GUI에서 직접 조건식을 입력해 해당 조건에 맞는 데이터만 첫 번째 세트로 분리하고 나머지를 두 번째 세트로 보내는 고급 분할 기능이다. 사용자가 정의한 SQL where절이나 Python 표현식 등을 활용하여 지역이나 패턴 등 원하는 기준으로 데이터를 구분할 수 있어, 단순 랜덤 분할 이상의 다양한 분할이 가능하다.
사용자 인터페이스 및 결과 미리보기 – 데이터 분할 위젯은 플랫폼의 다른 컴포넌트와 동일한 사용성을 갖춘다. 사용자는 위젯을 드래그 앤 드롭하여 작업 흐름에 배치하고, 속성 패널에서 앞서 언급된 분할 옵션들을 설정할 수 있다. 분할 실행 전에 미리보기 기능을 통해 예상 결과를 확인할 수 있으며, 예컨대 훈련/테스트 세트로 나뉜 후 각 세트의 행 수, 특정 열의 분포(계층 분할 선택 시) 등을 요약 통계로 제공한다. 분할 작업을 실행하면 두 개의 출력 데이터 노드가 생성되어 각각 후속 단계의 훈련 모듈과 평가 모듈 등에 연결할 수 있다. 이처럼 직관적인 UI와 미리보기 제공으로 사용자는 실수를 줄이고 신뢰도를 향상시킬 수 있다.

5.7) 데이터 분할 위젯은 다른 컴포넌트처럼 드래그&드롭으로 워크플로우에 배치하고 속성 패널에서 옵션을 설정할 수 있으며, 분할을 실행하기 전에 훈련/테스트 세트의 크기나 분포 등의 결과를 미리보기로 확인할 수 있다. 분할 실행 시 두 개의 출력 데이터 노드가 생성되어 각각 학습 모듈과 평가 모듈로 연결되고, 이러한 직관적 UI와 결과 미리보기로 사용자 실수를 줄이며 신뢰도를 높일 수 있다.