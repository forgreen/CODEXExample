문서 유형: 함수 정의서
클래스명: SplitDataModule 클래스 SplitDataModule에 포함된 주요 함수(메서드)들의 정의는 다음과 같다:
함수명: 생성자 __init__ (식별자: B7D12-F0001-C00001-M00001)
설명: SplitDataModule 객체를 초기화한다. 분할에 필요한 모드와 각종 파라미터들을 설정한다. 사용자가 분할 방식을 지정하고 관련 옵션 값을 제공하면 객체가 생성되며, 이후 주어진 설정을 바탕으로 데이터 분할을 수행할 준비를 마친다. 기본적으로 아무 설정도 하지 않을 경우 행 분할 모드로 50%:50% 비율 분할, 무작위 분할 활성화, 층화 분할 비활성화로 초기화된다.
입력:
splitting_mode (str): 분할 모드 지정 문자열. "행 분할", "정규식 분할", "조건식 분할", "추천 분할" 중 하나를 지정한다. 기본값은 "행 분할"이며 지원되는 구체적인 모드는 아래 함수를 참조한다.
fraction (float or str): 행 분할 모드에서 첫 번째 출력으로 보낼 데이터의 비율. 0과 1 사이의 부동소수점으로 지정하거나 "70%"와 같이 문자열 백분율로 지정 가능하다. 기본값은 0.5 (50%)이다.
randomize (bool): 행 분할 또는 기타 임의 분할에서 데이터를 무작위로 섞어 분할할지 여부. 기본값은 True이며, True로 설정하면 분할 전에 행 순서를 섞는다.
random_seed (int): 무작위 분할을 재현하기 위한 시드 값. randomize=True인 경우에만 사용되며, 동일한 시드 값이면 항상 동일한 분할 결과를 얻는다. 지정하지 않으면(또는 0) 기본 시드가 사용된다.
stratified (bool): 층화 분할 사용 여부. True로 설정하면 stratify_key 열의 분포를 균등하게 유지하며 분할한다. 기본값은 False이다.
stratify_key (str): 층화 분할 기준이 되는 열 이름. stratified=True인 경우 반드시 설정해야 하며, 이 열의 값 비율이 두 출력에 거의 동일하게 반영되도록 분할된다.
regex (str): 정규식 분할 모드에서 사용할 정규 표현식 패턴. splitting_mode="정규식 분할"인 경우에만 사용되며, 대상 열에서 이 패턴에 일치하는 행들을 첫 번째 출력으로 분류한다. Python 정규표현식 문법을 따르며, 예를 들어 "^A"는 해당 열 값이 'A'로 시작하는 행들을 의미한다.
target_column (str): 정규식 분할 모드에서 패턴을 적용할 대상 열 이름. 지정한 열에 대해 regex 패턴 매칭을 수행하여 분할한다.
expression (str): 조건식 분할 모드에서 사용할 조건 표현식. splitting_mode="조건식 분할"인 경우 사용되며, 하나의 숫자형 열에 대한 비교 식을 문자열로 작성한다. 예를 들어 "Age > 40" 또는 "Score <= 60"처럼 열 이름과 연산자, 값을 포함해야 한다. 복수의 조건을 논리 연산자로 결합할 수 있으며(& = AND, | = OR), 단 하나의 열만 참조해야 한다.
기타 파라미터: 추천 분할 모드의 경우, 추천 알고리즘 유형이나 특수한 분할 비율(차가운 사용자/아이템 비율 등)을 내부적으로 요구할 수 있다. 이들은 고정값 또는 객체 생성 후 별도의 설정 단계에서 지정된다. (일반적인 사용에서는 기본값이 사용되며, 상세 설정은 필요시 내부 구현에 따라 처리됨)
출력: 없음 (객체 생성자이므로 반환 값이 없다). 내부적으로 인스턴스 변수가 초기화되고 유효성 검사가 수행된다.
예외:
분할 모드 문자열이 지원되지 않는 값인 경우 ValueError 예외가 발생한다.
fraction 값이 0, 1 또는 0%나 100% 등 허용 범위를 벗어난 경우 예외를 발생시킨다. 분할 비율은 0과 1 (또는 0%와 100%) 사이의 값만 유효하다.
stratified=True인데 stratify_key가 주어지지 않았거나 유효한 열명이 아닌 경우 예외가 발생한다.
정규식 모드에서 regex 또는 target_column 미설정 시 예외가 발생한다.
조건식 모드에서 expression 미설정 또는 구문 오류가 있을 경우 예외가 발생한다.
입력 파라미터 유형이 맞지 않거나 논리에 어긋나는 값 (예: 음수 시드값 등)을 전달하면 예외가 발생할 수 있다.
함수명: split (데이터 분할 실행 함수) (식별자: B7D12-F0001-C00001-M00002)
설명: 설정된 분할 모드와 파라미터에 따라 입력 데이터셋을 실제로 분할한다. split() 함수를 호출하면 내부적으로 현재 객체에 설정된 모드 (splitting_mode)를 확인하여 해당 모드에 맞는 분할 알고리즘을 수행한다. 예를 들어 행 분할 모드라면 지정된 fraction 비율만큼 첫 번째 출력에 할당하고 나머지를 두 번째 출력에 할당한다. 정규식 분할 모드라면 사전에 설정된 target_column에서 regex 패턴을 만족하는 행들을 첫 번째 출력으로 보내고, 만족하지 않는 행들을 두 번째 출력으로 보낸다. 조건식 분할 모드라면 지정된 expression 조건을 평가하여 참인 행과 거짓인 행으로 데이터를 나누게 된다. 추천 분할 모드의 경우, 데이터셋을 추천 알고리즘 학습/평가에 적합한 방식으로 분할한다 (예: 사용자-아이템-평점 형태의 데이터셋을 학습용/테스트용으로 구분). 이 함수는 분할 완료 후 두 개의 결과 데이터셋을 반환하며, 각 결과는 원본의 서브셋(subset)이다.
입력:
dataset (Dataset 객체): 분할할 대상 데이터셋. 이 데이터셋은 테이블 형태로, 적어도 2개 이상의 행을 가져야 한다. 데이터셋의 열 구성은 모드에 따라 특정 요구조건이 있을 수 있다 (예: 추천 분할 모드는 정확히 3개의 열 - 사용자, 아이템, 평점 - 을 요구).
(생성자에서 이미 분할 모드와 관련 파라미터들은 설정되어 있으므로 split() 호출 시에는 추가 인자를 받지 않는다. 필요한 경우 객체 생성 전에 해당 옵션들을 설정해야 함)
출력: 두 개의 Dataset 객체를 튜플 형태로 반환한다: (dataset1, dataset2). dataset1에는 주어진 기준에 따라 선택된 행들이 담기고, dataset2에는 나머지 행들이 담긴다. 예를 들어 행 분할 모드에서 fraction=0.75로 설정했다면, dataset1은 원본의 75% 행을 (무작위 선택으로) 포함하고 dataset2는 나머지 25%를 포함한다. 정규식 분할 모드라면 dataset1은 정규 표현식 조건에 부합하는 행들을, dataset2는 그 외의 행들을 포함한다. 각 출력 데이터셋은 원본과 동일한 열 구조를 가지며, 행 순서는 randomize 옵션에 따라 무작위로 섞여있을 수 있다.
예외:
입력 데이터셋 오류: 입력 dataset이 존재하지 않거나 빈 데이터셋인 경우 예외가 발생한다. 특히 행 수가 2 미만이면 분할을 수행할 수 없으므로 오류를 반환한다.
분할 조건 오류: 설정된 모드에 필요한 추가 조건들이 만족되지 않을 경우 예외가 발생한다. 예를 들어, 정규식 분할 모드인데 지정된 target_column이 데이터셋에 없거나 해당 열이 텍스트 데이터가 아닐 경우 오류가 발생한다. 조건식 분할 모드에서 expression에 지정한 열 이름이 존재하지 않거나 식의 문법이 잘못된 경우 예외가 발생한다. 추천 분할 모드에서 입력 데이터셋이 **세 열(user, item, rating)**로 구성되지 않은 경우 분할을 진행하지 못하고 오류를 낸다.
분할 비율 오류: (행 분할 모드) 분할 비율(fraction)이 0이나 1로 설정되어 두 출력 중 하나에 모든 데이터를 넣게 되는 경우, 또는 백분율 문자열에서 0%나 100%로 지정된 경우 예외를 발생시킨다. 분할은 항상 일부 데이터가 두 번째 출력에 있어야 하므로, 최소 한 행 이상은 각 출력에 할당될 수 있도록 비율을 조정해야 한다.
기타: 내부 분할 과정 중 예기치 못한 오류(예: 데이터 타입 변환 불가, 메모리 부족 등)가 발생하면 해당 예외가 상위로 전달될 수 있다.
함수명: _split_rows (행 분할 알고리즘 함수) (식별자: B7D12-F0001-C00001-M00003)
설명: 행 분할 모드의 구체적인 동작을 구현한 내부 함수이다. 주어진 데이터셋을 단순 비율에 따라 두 부분으로 나눈다. 우선 입력된 전체 행 중 지정된 비율(fraction) 만큼의 행을 첫 번째 그룹으로 선택하고 나머지를 두 번째 그룹으로 분류한다. 이때 randomize 옵션이 참이면 분할 전에 행들의 순서를 무작위로 섞어 임의 샘플링한다. random_seed가 설정되어 있으면 해당 값을 난수 발생 시드로 사용하여 분할 결과의 재현성을 확보한다. 이 함수는 데이터 행의 순서만을 기준으로 나누므로, 행 순서를 섞지 않으면 원본 데이터의 앞부분이 첫 번째 출력에, 나머지가 두 번째 출력에 들어가게 된다.
입력:
dataset (Dataset): 분할할 전체 데이터셋.
(그 외 분할 비율, 랜덤 옵션 등은 객체의 속성으로 이미 설정되어 있다고 가정하여 사용한다)
출력: tuple (dataset1, dataset2): 첫 번째 출력 데이터셋과 두 번째 출력 데이터셋. 두 출력의 행 수 합계는 입력 데이터셋의 전체 행 수와 같으며, 각 행은 원본에서 가져온 것이다. 분할 비율이 예를 들어 0.6 (60%)이면 dataset1에 전체의 60% 행이, dataset2에 40% 행이 포함된다.
예외: 입력 데이터셋에 한 행도 없거나 한 행만 있는 경우 (즉, len(dataset) < 2) 오류가 발생한다. 또한, 내부 설정된 fraction 값이 0이나 1로 유효 범위를 벗어나 있는 경우 예외를 발생시킨다. 이 함수는 주로 내부에서 사용되며, 잘못된 비율이나 데이터셋 크기 조건을 사전에 검사하여 이러한 오류 상황을 방지한다.
함수명: _split_by_regex (정규식 분할 알고리즘 함수) (식별자: B7D12-F0001-C00001-M00004)
설명: 정규 표현식 기반 분할을 수행하는 내부 함수이다. 지정된 대상 열(target_column)의 값에 대해 주어진 정규 표현식 패턴(regex)을 적용하여, 패턴과 일치하는 레코드들과 그렇지 않은 레코드들을 나누어 담는다. 먼저 입력 데이터셋의 target_column 열에서 각 행의 값을 문자열로 변환한 뒤, 해당 값이 regex 패턴과 매치되는지 검사한다. 패턴에 매치된 행들은 첫 번째 결과집합에 포함되고, 매치되지 않은 행들은 두 번째 결과집합에 포함된다. 예를 들어 regex = "^AB"이고 target_column = "ProductName"인 경우, ProductName이 "AB"로 시작하는 행들은 첫 번째 출력에, 나머지 행들은 두 번째 출력에 저장된다.
입력:
dataset (Dataset): 분할할 입력 데이터셋.
(정규식 패턴과 대상 열 이름은 객체 초기화 시 설정된 regex, target_column 속성을 사용한다)
출력: tuple (dataset1, dataset2): 정규식 조건 참인 행들의 데이터셋과 거짓인 행들의 데이터셋. dataset1에는 정규식에 일치한 행들이 포함되고, dataset2에는 그 외의 모든 행이 포함된다. 만약 일치하는 행이 하나도 없으면 dataset1은 빈 데이터셋이 되고 dataset2는 원본과 동일한 전체 데이터를 담게 된다 (이 경우도 동작은 성공으로 간주).
예외:
target_column이 입력 데이터셋에 존재하지 않거나 해당 열의 데이터 타입이 문자열로 처리할 수 없는 경우 (예: 숫자형 열에 대해 정규식 매칭을 시도) 예외가 발생한다.
제공된 regex 패턴 문자열이 유효하지 않은 정규 표현식이라면 (예: 문법 오류) 분할 수행 중 런타임 오류가 발생하며 예외를 던진다.
매우 큰 데이터셋에서 복잡한 정규식을 사용할 경우 시간 초과 등의 문제가 발생할 수 있는데, 이러한 경우도 내부적으로 예외로 처리된다.
함수명: _split_by_expression (조건식 분할 알고리즘 함수) (식별자: B7D12-F0001-C00001-M00005)
설명: 조건식(상대 표현식) 기반 분할을 수행하는 내부 함수이다. 하나의 선택된 숫자형 열에 대하여 사용자 지정 조건 표현식(expression)을 평가하여 참/거짓에 따라 데이터를 분리한다. 예를 들어 expression = "Age > 40"이고 대상 열이 "Age"라면 Age 값이 40을 초과하는 행들은 첫 번째 출력에, 그 외의 행들은 두 번째 출력에 포함된다. 조건식은 단일 열에 대한 비교 연산을 포함해야 하며, <, >, <=, >=, ==, != 등의 연산자를 사용할 수 있다. 또한 여러 조건을 조합하기 위해 & (AND), | (OR) 연산자를 사용할 수 있으나, 소괄호로 묶는 복잡한 표현은 지원되지 않는다. 이 함수는 각 행의 해당 열 값에 대해 조건식을 계산하여 True/False를 판단하고 분기를 나눈다.
입력:
dataset (Dataset): 분할할 입력 데이터셋.
(조건식 문자열과 대상 열은 객체 설정에 따라 이미 정해진 상태이며, 대상 열 이름은 expression 문자열 내에 포함되어 있다고 가정한다)
출력: tuple (dataset1, dataset2): 조건식 평가 결과 True인 행들의 데이터셋과 False인 행들의 데이터셋. 예를 들어 조건이 "Score >= 60"이라면 dataset1에는 Score가 60 이상인 행이, dataset2에는 Score가 60 미만인 행이 들어간다.
예외:
조건식에 참조된 열 이름이 존재하지 않거나 해당 열이 숫자형이 아닌 경우 예외가 발생한다. (예: 조건식에 "Price"를 사용했지만 데이터셋에 Price 열이 없을 때)
expression 문자열의 구문이 잘못된 경우 (예: 지원되지 않는 연산자 사용 또는 잘못된 형식) 평가 중 오류가 발생하여 예외를 던진다.
두 개 이상의 열을 조건식에 포함하려 한 경우 예외가 발생한다 (지원되지 않는 사용법). 반드시 하나의 열만 비교해야 한다.
분할 결과 논리적으로 한쪽에 모든 데이터가 가는 조건식을 사용하더라도 (예: 항상 참인 조건), 그 자체로는 예외는 아니지만 이 경우 두 출력의 분포가 편향될 수 있다. 단, 최소 한 행이 두 출력에 있어야 한다는 기본 원칙에 위배되지는 않으면 예외 없이 처리된다.
함수명: _split_recommender (추천 분할 알고리즘 함수) (식별자: B7D12-F0001-C00001-M00006)
설명: 추천 모델용 특수 분할을 수행하는 내부 함수이다. 추천 시스템 알고리즘의 학습 및 평가를 위해 설계된 분할 방식으로, 사용자-아이템 평점 데이터셋을 훈련용과 테스트용으로 나눈다. 입력 데이터셋은 정확히 세 개의 열로 구성되어 있어야 하며, 일반적으로 사용자 ID, 아이템 ID, **평가(또는 평점)**의 형태를 따른다. 이 함수는 추천 모델의 요구사항에 맞춰 데이터 분리를 진행한다. 기본적으로 각 사용자와 아이템에 대해 한쪽 세트에만 존재하지 않도록 데이터를 나누며, 사용자 기반 추천인지 아이템 기반 추천인지 등에 따라 차가운 사용자(cold user) 또는 **차가운 아이템(cold item)**에 대한 처리 옵션을 적용할 수 있다. 예를 들어, 일부 설정에서는 전체 사용자 중 일정 비율을 테스트 전용 사용자로 지정하고 이들의 모든 기록을 테스트 세트로 보내거나, 반대로 훈련 전용 사용자를 설정할 수도 있다. 또한 각 사용자에 대해 일부 평점은 훈련 세트에, 나머지는 테스트 세트에 분산시켜 사용자별로 최소 하나 이상의 항목이 훈련 세트에 남도록 보장한다. 이 알고리즘은 여러 단계의 분할 규칙을 순차적으로 적용하여 데이터셋을 나누며, 최종적으로 두 개의 데이터셋(훈련용/테스트용)을 반환한다.
입력:
dataset (Dataset): 사용자-아이템-평점 형태의 입력 데이터셋. 세 개의 열로 구성되어야 하며 각 행은 (사용자, 아이템, 평점) 트리플을 나타낸다.
(추가로, 추천 분할에는 내부적으로 고정된 몇 가지 분할 비율 및 옵션이 존재하며, 필요에 따라 클래스 초기화 후 설정될 수 있지만 일반적인 기본값이 사용된다. 예를 들면: 무시할 아이템/사용자 비율, 차가운 아이템/사용자 비율 등)
출력: tuple (train_set, test_set): 추천 모델 학습용 데이터셋과 테스트용 데이터셋. train_set에는 대부분의 사용자-아이템 평점 데이터가 포함되며, test_set에는 평가를 위해 홀드아웃된 일부 사용자-아이템 평점이 포함된다. 분할 과정에서 가능한 한 모든 사용자와 아이템이 훈련 세트에도 등장하도록 처리하여, 테스트 세트의 어떤 사용자나 아이템도 훈련 세트에 전혀 존재하지 않는 상황(차가운 사용자/아이템 발생)을 최소화한다. 만약 설정에 따라 의도적으로 차가운 사용자나 아이템을 테스트 세트에 두도록 했다면, 그 비율은 사전에 정해진 기준을 따른다.
예외:
입력 데이터셋이 요구되는 형태(3열 구조)가 아닌 경우 예외를 발생시킨다. 예를 들어 열 개수가 더 많거나 적으면 InvalidDatasetFormatException과 유사한 오류를 낸다.
데이터셋에 사용자 또는 아이템 식별자가 하나만 존재하거나 너무 편중되어 있어 분할 규칙을 적용할 수 없는 경우 오류가 발생할 수 있다. (예: 모든 평점이 하나의 사용자에게만 있는 경우 등)
기타 내부 추천 분할 로직에서 발생하는 예외는 해당 상황에 따른 오류 메시지와 함께 상위에 전달된다. 예를 들어, 분할 중간 단계에서 예상치 못한 빈 데이터셋이 발생하면 예외가 던져질 수 있다.